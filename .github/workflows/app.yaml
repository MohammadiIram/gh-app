name: app

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Source branch to copy Tekton files from'
        required: true
        default: 'rhoai-x.y'
      target_branch:
        description: 'Target branch to copy Tekton files to'
        required: true
        default: 'rhoai-x.y'
      version:
        description: 'Version to update in Tekton files (e.g., v2.16.0)'
        required: true
        default: 'vx.y.z'

jobs:
  copy-tekton-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Automation Repository
        uses: actions/checkout@v3
        with:
          path: automation_repo
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify repos.txt existence
        run: |
          echo "Verifying repos.txt location:"
          ls -al automation_repo
          cat automation_repo/repos.txt || { echo "Error: repos.txt not found"; exit 1; }

      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v4
        with:
          application_id: ${{ secrets.APP_ID }}
          application_private_key: ${{ secrets.APP_KEY }}
          permissions: "actions:write"

      - name: Fetch and Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git

      - name: Process Repositories
        env:
          GIT_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        run: |
          set -e
          SOURCE_BRANCH=${{ github.event.inputs.source_branch }}
          TARGET_BRANCH=${{ github.event.inputs.target_branch }}
          VERSION=${{ github.event.inputs.version }}

          if [[ "$VERSION" =~ v([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            patch="${BASH_REMATCH[3]}"
          else
            echo "Error: Invalid version format. Expected 'vX.Y.Z'."
            exit 1
          fi

          echo "Processing Tekton files for version: $VERSION and branch: $TARGET_BRANCH"

          while IFS= read -r repo_url; do
            if [[ -z "$repo_url" || "$repo_url" =~ ^# ]]; then
              continue
            fi

            repo_name=$(basename "$repo_url" .git)
            echo "Cloning repository: $repo_url"
            git clone "$repo_url"
            cd "$repo_name" || { echo "Failed to enter directory $repo_name"; exit 1; }

            git config --global url."https://${GIT_TOKEN}@github.com/".insteadOf "https://github.com/"
            export GIT_ASKPASS="echo $GIT_TOKEN"

            if ! git checkout "$SOURCE_BRANCH"; then
              echo "Error: Source branch $SOURCE_BRANCH not found in $repo_name."
              cd ..
              rm -rf "$repo_name"
              continue
            fi

            echo "Copying Tekton files from $SOURCE_BRANCH"
            mkdir -p ../tekton_copy_$repo_name
            cp -r .tekton/* ../tekton_copy_$repo_name/

            echo "Updating version references in Tekton files"
            for file in ../tekton_copy_$repo_name/*; do
              sed -i "s/\bv[0-9]\+\.[0-9]\+\.[0-9]\+\b/$VERSION/g" "$file"
              sed -i "s/\brhoai-[0-9]\+\.[0-9]\+\b/rhoai-${major}.${minor}/g" "$file"
              sed -i "s/\bv[0-9]\+-[0-9]\+\b/v${major}-${minor}/g" "$file"
            done

            if ! git checkout "$TARGET_BRANCH"; then
              echo "Creating target branch: $TARGET_BRANCH"
              git checkout -b "$TARGET_BRANCH"
            fi

            echo "Copying updated Tekton files to $TARGET_BRANCH"
            mkdir -p .tekton
            cp -r ../tekton_copy_$repo_name/* .tekton/

            cd ..
          done < automation_repo/repos.txt

      - name: Commit and Push Changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.inputs.target_branch }}
          directory: ./tekton_copy_$repo_name
          message: "Sync Tekton files from ${{ github.event.inputs.source_branch }} to ${{ github.event.inputs.target_branch }} with updated versioning"

      - name: Cleanup Workflow
        run: echo "Workflow execution completed."
